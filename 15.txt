Q1.
<html><body>
<%
String n=request.getParameter("num");
for(int i=0;i<n.length();i++)
{
    switch(n.charAt(i))
    {
        case '1': out.print("<h1 style=color:red>one-</h1>");
                break;
        case '2':out.print("<h1 style=color:red>two-</h1>");
                break;
         case '3':out.print("<h1 style=color:red>three-</h1>");
                break;
         case '4':out.print("<h1 style=color:red>four-</h1>");
                break;
         case '5':out.print("<h1 style=color:red>five-</h1>");
                break;
         case '6':out.print("<h1 style=color:red>six-</h1>");
                break;
         case '7':out.print("<h1 style=color:red>seven-</h1>");
                break;
         case '8':out.print("<h1 style=color:red>eight-</h1>");
                break;
         case '9':out.print("<h1 style=color:red>nine-</h1>");
                break;
         case '0':out.print("<h1 style=color:red>zero-</h1>");
                break;
    }
}
%>
</body>
</html>
________________________________________________________________________________________
Q2.
ClientTest.java
import java.net.*;
import java.io.*;
import java.util.*;
public class ClientTest {
    private Socket con;
    private DataOutputStream sendmsg;
    public ClientTest()
    {
        try{
            con=new Socket(InetAddress.getLocalHost(),5000);
            sendmsg=new DataOutputStream(con.getOutputStream());
        }
        catch(IOException e){}
    }
    public void talk()
    {
        try{
        Scanner sc=new Scanner(System.in);
        String msg;
        StringBuilder str=new StringBuilder();
        while(true)
        {
                System.out.println("enter message:");
                msg=sc.next();
                for(char ch:msg.toCharArray())
                {
                    if(Character.isLowerCase(ch))
                    str.append(Character.toUpperCase(ch));
                    else
                    str.append(Character.toLowerCase(ch));
                }
                msg=str.toString();
                sendmsg.writeUTF(msg);
                str.setLength(0);
            }
        }
        catch(IOException e){}
    }
    public static void main(String args[])
    {
        ClientTest t=new ClientTest();
        t.talk();
    }   
}


serverTest.java
package slip15;

import java.io.*;
import java.net.*;
public class ServerTest {
    private Socket con;
    private ServerSocket server;
    DataInputStream receivedMsg;
    public ServerTest() {
        try {
            server = new ServerSocket(5000, 1, InetAddress.getLocalHost());
        } catch (IOException e) {}
    }
    public void talk() {
        try {
            con = server.accept();
            receivedMsg = new DataInputStream(con.getInputStream());
            String msg;
            while (true) {
                msg = receivedMsg.readUTF();
                if (msg.equals("EXIT")) {
                    System.out.println("Received exit command, shutting down server");
                    break;
                } else 
                    System.out.println(msg);
            }
            con.close();
        } catch (IOException e) {}
    }
    public static void main(String args[]) {
        ServerTest t = new ServerTest();
        t.talk();
    }
}